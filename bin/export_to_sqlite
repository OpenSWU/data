#!/usr/bin/env ruby
# frozen_string_literal: true
libdir = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(libdir) unless $LOAD_PATH.include?(libdir)

require "rubygems"
require "bundler/setup"

require "csv"
require "fileutils"
require "progress_bar"
require "sequel/core"
require "sqlite3"

db_file = "tmp/exports/openswu.sqlite"

FileUtils.rm_f(db_file) if File.exist?(db_file)

Sequel.extension :migration
DB = Sequel.sqlite(db_file)
Sequel::Migrator.run(DB, "db/migrations", target: 1)

%w[arenas aspects expansions keywords rarities traits types].each do |data_set|
  puts
  puts "Exporting #{data_set}..."
  target_file = "tmp/exports/#{data_set}.csv"

  csv_reader = CSV.read(target_file, headers:true)
  progress_bar = ProgressBar.new(csv_reader.size)
  csv_reader.each do |row|
    DB.from(data_set).insert(row.to_hash)
    progress_bar.increment!
  end
end

puts
puts "Exporting cards..."
cards_file = "tmp/exports/cards.csv"
csv_reader = CSV.read(cards_file, headers:true)
progress_bar = ProgressBar.new(csv_reader.size)
csv_reader.each do |row|
  excluded_headers = %w[aspect_ids arena_ids trait_ids keyword_ids]
  values = row.to_hash.reject { |k, _| excluded_headers.include?(k) }
  DB.from("cards").insert(values)
  progress_bar.increment!
end

puts
puts "Exporting card associations..."
progress_bar = ProgressBar.new(csv_reader.size)
csv_reader.each do |row|
  card_id = row["id"]

  %w[arena aspect keyword trait].each do |association|
    row["#{association}_ids"].split(";").each do |id|
      DB.from("cards_#{association}s").insert(card_id: card_id, "#{association}_id": id)
    end
  end

  progress_bar.increment!
end
